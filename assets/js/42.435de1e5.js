(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{245:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[t._v("#")]),t._v(" 事件循环")]),t._v(" "),a("p",[t._v("事件循环（EventLoop）。")]),t._v(" "),a("p",[t._v("浏览器中的JavaScript的执行流程和NodeJs中的流程都是基于"),a("strong",[t._v("事件循环")]),t._v("的，是单线程的。")]),t._v(" "),a("p",[t._v("它是在一个JS引擎等待任务，执行任务和进入休眠状态等多更任务这几个状态之间来回切换的无限循环。")]),t._v(" "),a("p",[t._v("一般算法为：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("当有任务时，从最先进入的任务开始执行。")])]),t._v(" "),a("li",[a("p",[t._v("休眠直到出现新的任务，回到第一步开始。")])])]),t._v(" "),a("h2",{attrs:{id:"宏任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宏任务"}},[t._v("#")]),t._v(" 宏任务")]),t._v(" "),a("p",[t._v("当引擎处于繁忙状态时，比如在处理一个任务，新的任务就会组成一个队列，即所谓的宏任务队列。")]),t._v(" "),a("h2",{attrs:{id:"微任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微任务"}},[t._v("#")]),t._v(" 微任务")]),t._v(" "),a("p",[t._v("微任务来自与我们的代码。通常是由"),a("code",[t._v("promise")]),t._v(" 创建的，比如对"),a("code",[t._v("then/catch/finally")]),t._v("处理程序的执行会成为微任务。微任务也被用于"),a("code",[t._v("await")]),t._v("的幕后。")]),t._v(" "),a("p",[a("strong",[t._v("每个宏任务后，引擎会立即执行微任务队列中的所有任务，执行完成后再执行其他的宏任务，或进行渲染处理等其他操作。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"timeout"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"promise"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"code"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// code")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// promise 第二个出现，因为 then 会通过微任务队列，并在当前代码之后执行。注意：promise.reslove本身是同步的。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// timeout 宏任务")]),t._v("\n")])])]),a("h2",{attrs:{id:"哪些是宏任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#哪些是宏任务"}},[t._v("#")]),t._v(" 哪些是宏任务")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("#")]),t._v(" "),a("th",[t._v("浏览器")]),t._v(" "),a("th",[t._v("Node")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("I/O")])]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("setTimeout")])]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("setInterval")])]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("setImmediate")])]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("requestAnimationFrame")])]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("❌")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在官方文档中的定义，"),a("code",[t._v("setImmediate")]),t._v("为一次Event Loop执行完毕后调用。"),a("code",[t._v("setTimeout")]),t._v("则是通过计算一个延迟时间后进行执行。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("requestAnimationFrame")]),t._v("姑且也算是宏任务吧，在MDN的定义为，下次页面重绘前所执行的操作，而重绘也是作为宏任务的一个步骤来存在的，且该步骤晚于微任务的执行。")])])]),t._v(" "),a("h2",{attrs:{id:"哪些是微任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#哪些是微任务"}},[t._v("#")]),t._v(" 哪些是微任务")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("#")]),t._v(" "),a("th",[t._v("浏览器")]),t._v(" "),a("th",[t._v("Node")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("process.nextTick")])]),t._v(" "),a("td",[t._v("❌")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("MutationObserver")])]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("❌")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("Promise.then catch finally")])]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")])])])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("process.nextTick")]),t._v(" 可以认为是一个类似于Promise和MutationObserver的微任务实现，在代码执行的过程中可以随时插入nextTick，并且会保证在下一个宏任务开始之前所执行。")])]),t._v(" "),a("li",[a("p",[t._v("有些地方会列出来"),a("code",[t._v("UI Rendering")]),t._v("，说这个也是宏任务，可是在读了HTML规范文档以后，发现这很显然是和微任务平行的一个操作步骤。")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);