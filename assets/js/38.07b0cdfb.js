(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{236:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试题"}},[t._v("#")]),t._v(" 面试题")]),t._v(" "),a("p",[t._v("用过 Promise 吗？举例说明。\n如果要你创建一个返回 Promise 对象的函数，你会怎么写？举例说明。")]),t._v(" "),a("h2",{attrs:{id:"举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[t._v("#")]),t._v(" 举例")]),t._v(" "),a("p",[t._v("用过 Promise，比如 jQuery 或者 axios 的 AJAX 功能，都返回的是 Promise 对象。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/xxx'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("success1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" error1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("success2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" error2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"自己写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自己写"}},[t._v("#")]),t._v(" 自己写")]),t._v(" "),a("p",[t._v("如果我自己创建 Promise 对象，我会这么写：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("asyncMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//成功则调用 resolve")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'成功了'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//失败则调用 reject")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'失败了'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"关于-promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-promise"}},[t._v("#")]),t._v(" 关于 promise")]),t._v(" "),a("p",[t._v("promise 并不是前端发明，只是借鉴并总结为规范。")]),t._v(" "),a("p",[a("em",[a("strong",[t._v("Promise 对象用于表示一个异步操作的最终完成 (或失败), 及其结果值。Promise 是目前前端解决异步问题的统一方案。")])])]),t._v(" "),a("p",[a("code",[t._v("window.Promise")]),t._v(" 是一个全局函数，可以用来构造 Promise 对象。使用 "),a("code",[t._v("return new Promise((resolve, reject)=> {})")]),t._v(" 就可以构造一个 Promise 对象，构造出来的 Promise 对象含有一个 "),a("code",[t._v(".then()")]),t._v(" 函数属性")]),t._v(" "),a("h2",{attrs:{id:"关于-new-promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-new-promise"}},[t._v("#")]),t._v(" 关于 new Promise()")]),t._v(" "),a("p",[t._v("Promise 构造函数接受一个函数作为参数，该函数的两个参数分别是 "),a("code",[t._v("resolve")]),t._v(" 和 "),a("code",[t._v("reject")]),t._v("。它们是两个函数，由 JavaScript 引擎提供，不用自己部署。")]),t._v(" "),a("p",[t._v("任务成功的时候调用 "),a("code",[t._v("resolve")]),t._v("，失败的时候调用 "),a("code",[t._v("reject")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("resolve")]),t._v(" 函数的作用是，将Promise对象的状态从“未完成”变为“成功”，在异步操作成功时调用，并将异步操作的结果，作为参数传递出去；"),a("code",[t._v("reject")]),t._v(" 函数的作用是，将Promise对象的状态从“未完成”变为“失败”，在异步操作失败时调用，并将异步操作报出的错误，作为参数传递出去。")]),t._v(" "),a("p",[t._v("Promise实例生成以后，可以用 "),a("code",[t._v("then")]),t._v(" 方法分别指定 "),a("code",[t._v("resolved")]),t._v(" 状态和 "),a("code",[t._v("rejected")]),t._v(" 状态的回调函数。")]),t._v(" "),a("p",[t._v("也就是说，"),a("code",[t._v("resolve")]),t._v(" 和 "),a("code",[t._v("reject")]),t._v(" 并不是 "),a("code",[t._v(".then(succes, fail)")]),t._v(" 里面的 "),a("code",[t._v("success")]),t._v(" 和 "),a("code",[t._v("fail")]),t._v("，"),a("code",[t._v("resolve")]),t._v(" 会去调用 "),a("code",[t._v("success")]),t._v("，"),a("code",[t._v("reject")]),t._v(" 会去调用 "),a("code",[t._v("fail")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"then-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#then-方法"}},[t._v("#")]),t._v(" "),a("code",[t._v(".then()")]),t._v(" 方法")]),t._v(" "),a("p",[a("code",[t._v("Promise.prototype.then()")])]),t._v(" "),a("p",[a("code",[t._v("then()")]),t._v(" 方法返回一个 Promise。它最多需要有两个参数：Promise 的成功和失败情况的回调函数。可以链式操作。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("asyncMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fail"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fail"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);